get-service | where {$_.status -eq "running"} | ConvertTo-Html | Out-File "C:\users\Oscar\Desktop"
get-service | where {$_.status -eq "stopped"} | measure 
Get-Service -Name "lmhosts" | Format-List -Property Name, DependentServices
GET-DNSCLIENTCACHE | SELECT TTL,SECTION,DESCRIPTION,NAME
nesth winsock show catalog
Get-Service -name "lmhosts" -RequiredServices | Format-List *
Get-WmiObject win32_service | Where-Object {$_.state -EQ "running"} | measure
Get-Process | where handles -GT 1600
get-module -listavailable
Get-WindowsUpdateLog | format-list
get-nettcpconnection | Where-Object {$_.state -eq "established"}
Get-NetTCPConnection | Where-Object {$_.remoteport -eq "80"}
GET-NETTCPCONNECTION
Test-NetConnection -traceroute
get-service | where {$_.status -eq "running"}
GET-EVENTLOG -LOGNAME System -Newest 20 
Get-EventLog -LogName SECURITY -NEWEST 7
Get-DnsClient | select hostname,pscomputername,status,protocoltype | Format-List
Get-DnsClientCache
Clear-DnsClientCache
get-module -listavailable | measure
Get-WindowsUpdateLog | format-list 
get-nettcpconnection | where {$_.State -eq "established"}
Get-WmiObject win32_service | Where-Object {$_.state -eq "running"} | measure
Get-WmiObject -ClasS win32_networkadapter | Select-Object servicename,speed
get-process | select -property cpu,id,processname
Get-ProcessMitigation | SELECT PROCESSNAME | Format-List | measure
Get-WmiObject -Class win32_networkadapter | Select servicename,speed,naME
netsh wlan show interfaces
Get-WmiObject win32_service
Get-NetAdapterEncapsulatedPacketTaskOffload
netsh lan show profiles
netsh wlan show hostednetwork
Get-WmiObject -CLASS WIN32_networkadapter
Get-WmiObject -CLASS WIN32_networkadapter | select-object name,speed
Get-Process | SELECT PSCONFIGURATION | Where-Object {$_.prioritytyclass -eq "high"}
(Get-Process).count

#APPROVED VERBS
Get-Verb
Get-Command SET-* | MEASURE
Get-Command New-*
Get-Command GET-*
Get-Command out-*
#Piping is very often to export data
Get-Service | Export-Csv -Path 'c:\PEDRO\Users\Green1\Desktop\Powershell\'
Get-WinEvent -FilterHashtable @{
   LogName='Application'
   ProviderName ='defrag*'
}

[System.Diagnostics.Eventing.Reader.StandardEventKeywords] | Get-Member -Static -MemberType Property

Get-ChildItem -Path C:\WINDOWS\System32\w*32*.dll -Exclude *[9516]*

Get-WmiObject -Class Win32_NetworkAdapterConfiguration -Filter IPEnabled=$true -ComputerName . | Format-Table -Property IPAddress

'192.168.1.69','localhost','research.microsoft.com' | ForEach-Object -Process {Get-WmiObject -Class Win32_PingStatus -Filter ("Address='" + $_ + "'") -ComputerName .} | Select-Object -Property Address,ResponseTime,StatusCode

1..254| ForEach-Object -Process {Get-WmiObject -Class Win32_PingStatus -Filter ("Address='192.168.1." + $_ + "'") -ComputerName .} | Select-Object -Property Address,ResponseTime,StatusCode

FIND-MODULE | MEASURE
Find-Module *NET*

Get-Command -Module POWERSHELLGET *PSREPOSITORY


